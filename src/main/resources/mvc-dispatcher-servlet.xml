<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!--配置需自动注入扫描包 -->
	<context:component-scan base-package="com.aerors.dms" />


	<!-- 导入mongodb的配置文件 -->
	<import resource="mongodb-context.xml" />

	<!-- 静态资源(js、image等)的访问 -->
	<mvc:default-servlet-handler />

	<!-- 开启注解 -->
	<mvc:annotation-driven />
	<!--ViewResolver 视图解析器 -->
	<mvc:view-resolvers>
		<mvc:content-negotiation>
			<mvc:default-views>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="jsonpParameterNames">
						<set>
							<value>jsonp</value>
							<value>callback</value>
						</set>
					</property>
				</bean>
			</mvc:default-views>
		</mvc:content-negotiation>
		<mvc:jsp prefix="/views/" suffix=".jsp"></mvc:jsp>
	</mvc:view-resolvers>
	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
		
	<!-- quartz配置 动态配置所以我们将 Factory 作为一个service一样的接口 QuartzJobFactory.java -->
	<!-- 调度工厂 -->
	<bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />
</beans>